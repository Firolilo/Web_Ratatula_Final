@model AspnetCoreMvcFull.Models.ViewModels.PromocionViewModel

@{
  ViewData["Title"] = "Crear Promoción";
}

<h1>Crear Nueva Promoción</h1>

<form asp-action="Create" method="post">

  <!-- Campo: Nombre de la Promoción -->
  <div class="form-group">
    <label asp-for="Nombre" class="control-label"></label>
    <input asp-for="Nombre" class="form-control" />
    <span asp-validation-for="Nombre" class="text-danger"></span>
  </div>

  <!-- Campo: Descripción de la Promoción -->
  <div class="form-group">
    <label asp-for="Descripcion" class="control-label"></label>
    <textarea asp-for="Descripcion" class="form-control"></textarea>
    <span asp-validation-for="Descripcion" class="text-danger"></span>
  </div>

  <!-- Campo: Precio Promocional -->
  <div class="form-group">
    <label asp-for="PrecioPromo" class="control-label"></label>
    <input asp-for="PrecioPromo" class="form-control" type="number" step="0.01" />
    <span asp-validation-for="PrecioPromo" class="text-danger"></span>
  </div>

  <!-- Sección: Productos en Promoción -->
  <div class="form-group">
    <label>Productos en Promoción</label>
    <div id="productos-container">
      <div class="producto-item mb-3">
        <input type="hidden" name="Productos.Index" value="0" />
        <div class="form-row">
          <!-- Campo: ID Producto -->
          <div class="col-md-6">
            <label>ID Producto</label>
            <input type="text" name="Productos[0].IdProducto" class="form-control" required />
            <span class="text-danger"></span>
          </div>
          <!-- Campo: Cantidad -->
          <div class="col-md-4">
            <label>Cantidad</label>
            <input type="number" name="Productos[0].Cantidad" class="form-control" min="1" required />
            <span class="text-danger"></span>
          </div>
          <!-- Botón: Eliminar Producto -->
          <div class="col-md-2 d-flex align-items-end">
            <button type="button" class="btn btn-danger remove-producto">Eliminar</button>
          </div>
        </div>
      </div>
    </div>
    <!-- Botón: Agregar Producto -->
    <button type="button" class="btn btn-secondary mt-2" id="add-producto">Agregar Producto</button>
    <span asp-validation-for="Productos" class="text-danger"></span>
  </div>

  <!-- Botón: Crear Promoción -->
  <button type="submit" class="btn btn-primary mt-3">Crear Promoción</button>
</form>

<partial name="_ValidationScriptsPartial" />
<script>
    let productoIndex = 1;

    document.getElementById('add-producto').addEventListener('click', function () {
        const container = document.getElementById('productos-container');
        const productoItem = document.createElement('div');
        productoItem.className = 'producto-item mb-3';

        productoItem.innerHTML = `
                <input type="hidden" name="Productos.Index" value="${productoIndex}" />
                <div class="form-row">
                    <div class="col">
                        <label>ID Producto</label>
                        <input type="text" name="Productos[${productoIndex}].IdProducto" class="form-control" required />
                        <span class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label>Cantidad</label>
                        <input type="number" name="Productos[${productoIndex}].Cantidad" class="form-control" min="1" required />
                        <span class="text-danger"></span>
                    </div>
                    <div class="col-auto align-self-end">
                        <button type="button" class="btn btn-danger remove-producto">Eliminar</button>
                    </div>
                </div>
            `;

        container.appendChild(productoItem);
        productoIndex++;
    });

    document.getElementById('productos-container').addEventListener('click', function (e) {
        if (e.target && e.target.classList.contains('remove-producto')) {
            e.target.closest('.producto-item').remove();
        }
    });
</script>
